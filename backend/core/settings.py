"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta

import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Where the recordings will be stored
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Configure specific directory for recordings
RECORDINGS_DIR = os.path.join(MEDIA_ROOT, 'recordings')

# Ensure directories exist
os.makedirs(RECORDINGS_DIR, exist_ok=True)

# For handling file uploads, you might want to adjust these settings:
FILE_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10MB

# If you need to allow larger file uploads, increase these values
# Make sure your web server configuration also allows for larger uploads

# For audio formats, add these MIME types to accepted formats
ALLOWED_AUDIO_FORMATS = [
    'audio/mpeg',       # MP3
    'audio/mp4',        # M4A
    'audio/mp4a-latm',
    'audio/wav',        # WAV
    'audio/x-wav',      # WAV (alternative MIME)
    'audio/webm',       # WebM
    'audio/ogg',        # OGG
    'application/ogg',  # OGG (alternative MIME)
    'audio/x-m4a',
]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x011-w(n%!k#myx82p+g%1cy92hr(i%a(3lj8#hui2h9x8cqk@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'signatures',
    'patientManagement',
    'providerManagement',
    'rest_framework',
    'rest_framework_simplejwt',
    'recordings',
    'surveyManagement',
]

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),  # Access token expiry
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),    # Refresh token expiry
    'ROTATE_REFRESH_TOKENS': True,                   # Rotate refresh tokens after use
    'BLACKLIST_AFTER_ROTATION': True,                # Blacklist old refresh tokens
}


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],

}


CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = [
    'content-type',
    'authorization',
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'cache-control',
    'pragma',
    'Authorization'

]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",     # If using React
    "http://localhost:8000",     # Django dev server
    "http://localhost:8081",     # Alternate port
    "http://localhost:19000",    # Expo development server
    "http://localhost:19006",    # Expo web
    "exp://localhost:19000",     # Expo client
    "http://127.0.0.1:19000",    # Expo development server alternative
    "http://127.0.0.1:19006",    # Expo web alternative
    "exp://127.0.0.1:19000",     # Expo client alternative
    "http://172.20.8.4",         # Example specific IP
    "http://172.20.24.16",       # Example specific IP
    "http://192.168.1.160",
    # Add more IPs as needed for testing on different devices
    # For example, if testing on a phone connected to your local network:
    # You may also need to add entries for your machine's actual IP address
]

# For development, you might want to allow all origins
# CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# Alternative: Allow all origins for development
# CORS_ALLOW_ALL_ORIGINS = True




MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'recordings.middleware.AddAcceptRangesHeaderMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

import os

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'hypercase',  # Replace with your database name
        'USER': 'postgres',            # Replace with your PostgreSQL username
        'PASSWORD': 'hypercase123',   # Replace with your PostgreSQL password
        'HOST': '127.0.0.1',       # Use your local IP address here
        'PORT': '5432',                # The default PostgreSQL port
    }
}






# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


